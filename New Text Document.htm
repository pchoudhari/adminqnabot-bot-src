<!DOCTYPE html>\r\n<html lang=\"en\" xmlns=\"http://www.w3.org/1999/xhtml\">\r\n    <head>\r\n        <meta charset=\"utf-8\" />\r\n        <title>Internal Server Error</title>\r\n        <style>\r\n            body {\r\n    font-family: 'Segoe UI', Tahoma, Arial, Helvetica, sans-serif;\r\n    font-size: .813em;\r\n    color: #222;\r\n    background-color: #fff;\r\n}\r\n\r\nh1, h2, h3, h4, h5 {\r\n    /*font-family: 'Segoe UI',Tahoma,Arial,Helvetica,sans-serif;*/\r\n    font-weight: 100;\r\n}\r\n\r\nh1 {\r\n    color: #44525e;\r\n    margin: 15px 0 15px 0;\r\n}\r\n\r\nh2 {\r\n    margin: 10px 5px 0 0;\r\n}\r\n\r\nh3 {\r\n    color: #363636;\r\n    margin: 5px 5px 0 0;\r\n}\r\n\r\ncode {\r\n    font-family: Consolas, \"Courier New\", courier, monospace;\r\n}\r\n\r\nbody .titleerror {\r\n    padding: 3px 3px 6px 3px;\r\n    display: block;\r\n    font-size: 1.5em;\r\n    font-weight: 100;\r\n}\r\n\r\nbody .location {\r\n    margin: 3px 0 10px 30px;\r\n}\r\n\r\n#header {\r\n    font-size: 18px;\r\n    padding: 15px 0;\r\n    border-top: 1px #ddd solid;\r\n    border-bottom: 1px #ddd solid;\r\n    margin-bottom: 0;\r\n}\r\n\r\n    #header li {\r\n        display: inline;\r\n        margin: 5px;\r\n        padding: 5px;\r\n        color: #a0a0a0;\r\n        cursor: pointer;\r\n    }\r\n\r\n    #header .selected {\r\n        background: #44c5f2;\r\n        color: #fff;\r\n    }\r\n\r\n#stackpage ul {\r\n    list-style: none;\r\n    padding-left: 0;\r\n    margin: 0;\r\n    /*border-bottom: 1px #ddd solid;*/\r\n}\r\n\r\n#stackpage .details {\r\n    font-size: 1.2em;\r\n    padding: 3px;\r\n    color: #000;\r\n}\r\n\r\n#stackpage .stackerror {\r\n    padding: 5px;\r\n    border-bottom: 1px #ddd solid;\r\n}\r\n\r\n\r\n#stackpage .frame {\r\n    padding: 0;\r\n    margin: 0 0 0 30px;\r\n}\r\n\r\n    #stackpage .frame h3 {\r\n        padding: 2px;\r\n        margin: 0;\r\n    }\r\n\r\n#stackpage .source {\r\n    padding: 0 0 0 30px;\r\n}\r\n\r\n    #stackpage .source ol li {\r\n        font-family: Consolas, \"Courier New\", courier, monospace;\r\n        white-space: pre;\r\n        background-color: #fbfbfb;\r\n    }\r\n\r\n#stackpage .frame .source .highlight li span {\r\n    color: #FF0000;\r\n}\r\n\r\n#stackpage .source ol.collapsible li {\r\n    color: #888;\r\n}\r\n\r\n    #stackpage .source ol.collapsible li span {\r\n        color: #606060;\r\n    }\r\n\r\n.page table {\r\n    border-collapse: separate;\r\n    border-spacing: 0;\r\n    margin: 0 0 20px;\r\n}\r\n\r\n.page th {\r\n    vertical-align: bottom;\r\n    padding: 10px 5px 5px 5px;\r\n    font-weight: 400;\r\n    color: #a0a0a0;\r\n    text-align: left;\r\n}\r\n\r\n.page td {\r\n    padding: 3px 10px;\r\n}\r\n\r\n.page th, .page td {\r\n    border-right: 1px #ddd solid;\r\n    border-bottom: 1px #ddd solid;\r\n    border-left: 1px transparent solid;\r\n    border-top: 1px transparent solid;\r\n    box-sizing: border-box;\r\n}\r\n\r\n    .page th:last-child, .page td:last-child {\r\n        border-right: 1px transparent solid;\r\n    }\r\n\r\n.page .length {\r\n    text-align: right;\r\n}\r\n\r\na {\r\n    color: #1ba1e2;\r\n    text-decoration: none;\r\n}\r\n\r\n    a:hover {\r\n        color: #13709e;\r\n        text-decoration: underline;\r\n    }\r\n\r\n.showRawException {\r\n    cursor: pointer;\r\n    color: #44c5f2;\r\n    background-color: transparent;\r\n    font-size: 1.2em;\r\n    text-align: left;\r\n    text-decoration: none;\r\n    display: inline-block;\r\n    border: 0;\r\n    padding: 0;\r\n}\r\n\r\n.rawExceptionStackTrace {\r\n    font-size: 1.2em;\r\n}\r\n\r\n.rawExceptionBlock {\r\n    border-top: 1px #ddd solid;\r\n    border-bottom: 1px #ddd solid;\r\n}\r\n\r\n.showRawExceptionContainer {\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.expandCollapseButton {\r\n    cursor: pointer;\r\n    float: left;\r\n    height: 16px;\r\n    width: 16px;\r\n    font-size: 10px;\r\n    position: absolute;\r\n    left: 10px;\r\n    background-color: #eee;\r\n    padding: 0;\r\n    border: 0;\r\n    margin: 0;\r\n}\r\n\r\n        </style>\r\n    </head>\r\n    <body>\r\n        <h1>An unhandled exception occurred while processing the request.</h1>\r\n            <div class=\"titleerror\">ErrorResponseException: Operation returned an invalid status code &#x27;PaymentRequired&#x27;</div>\r\n                <p class=\"location\">Microsoft.Bot.Connector.Conversations.ReplyToActivityWithHttpMessagesAsync(string conversationId, string activityId, Activity activity, Dictionary&lt;string, List&lt;string&gt;&gt; customHeaders, CancellationToken cancellationToken) in <code title=\"d:\\a\\1\\s\\libraries\\Microsoft.Bot.Connector\\Conversations.cs\">Conversations.cs</code>, line 1121</p>\r\n        <ul id=\"header\">\r\n            <li id=\"stack\" tabindex=\"1\" class=\"selected\">\r\n                Stack\r\n            </li>\r\n            <li id=\"query\" tabindex=\"2\">\r\n                Query\r\n            </li>\r\n            <li id=\"cookies\" tabindex=\"3\">\r\n                Cookies\r\n            </li>\r\n            <li id=\"headers\" tabindex=\"4\">\r\n                Headers\r\n            </li>\r\n        </ul>\r\n\r\n        <div id=\"stackpage\" class=\"page\">\r\n            <ul>\r\n                                    <li>\r\n                        <h2 class=\"stackerror\">ErrorResponseException: Operation returned an invalid status code &#x27;PaymentRequired&#x27;</h2>\r\n                        <ul>\r\n                            <li class=\"frame\" id=\"frame1\">\r\n                                    <h3>Microsoft.Bot.Connector.Conversations.ReplyToActivityWithHttpMessagesAsync(string conversationId, string activityId, Activity activity, Dictionary&lt;string, List&lt;string&gt;&gt; customHeaders, CancellationToken cancellationToken) in <code title=\"d:\\a\\1\\s\\libraries\\Microsoft.Bot.Connector\\Conversations.cs\">Conversations.cs</code></h3>\r\n\r\n                            </li>\r\n                            <li class=\"frame\" id=\"frame2\">\r\n                                    <h3>Microsoft.Bot.Connector.ConversationsExtensions.ReplyToActivityAsync(IConversations operations, string conversationId, string activityId, Activity activity, CancellationToken cancellationToken) in <code title=\"d:\\a\\1\\s\\libraries\\Microsoft.Bot.Connector\\ConversationsExtensions.cs\">ConversationsExtensions.cs</code></h3>\r\n\r\n                            </li>\r\n                            <li class=\"frame\" id=\"frame3\">\r\n                                    <h3>Microsoft.Bot.Builder.BotFrameworkAdapter.SendActivitiesAsync(ITurnContext turnContext, Activity[] activities, CancellationToken cancellationToken) in <code title=\"d:\\a\\1\\s\\libraries\\Microsoft.Bot.Builder\\BotFrameworkAdapter.cs\">BotFrameworkAdapter.cs</code></h3>\r\n\r\n                            </li>\r\n                            <li class=\"frame\" id=\"frame4\">\r\n                                    <h3>Microsoft.Bot.Builder.TurnContext&#x2B;&lt;&gt;c__DisplayClass22_0&#x2B;&lt;&lt;SendActivitiesAsync&gt;g__SendActivitiesThroughAdapter|1&gt;d.MoveNext() in <code title=\"d:\\a\\1\\s\\libraries\\Microsoft.Bot.Builder\\TurnContext.cs\">TurnContext.cs</code></h3>\r\n\r\n                            </li>\r\n                            <li class=\"frame\" id=\"frame5\">\r\n                                    <h3>Microsoft.Bot.Builder.TurnContext.SendActivityAsync(IActivity activity, CancellationToken cancellationToken) in <code title=\"d:\\a\\1\\s\\libraries\\Microsoft.Bot.Builder\\TurnContext.cs\">TurnContext.cs</code></h3>\r\n\r\n                            </li>\r\n                            <li class=\"frame\" id=\"frame6\">\r\n                                    <h3>Microsoft.Bot.Builder.TurnContext.SendActivityAsync(string textReplyToSend, string speak, string inputHint, CancellationToken cancellationToken) in <code title=\"d:\\a\\1\\s\\libraries\\Microsoft.Bot.Builder\\TurnContext.cs\">TurnContext.cs</code></h3>\r\n\r\n                            </li>\r\n                            <li class=\"frame\" id=\"frame7\">\r\n                                    <h3>Microsoft.BotBuilderSamples.AdapterWithErrorHandler&#x2B;&lt;&gt;c__DisplayClass0_0&#x2B;&lt;&lt;-ctor&gt;b__0&gt;d.MoveNext() in <code title=\"D:\\adminqnabot-bot-src\\AdapterWithErrorHandler.cs\">AdapterWithErrorHandler.cs</code></h3>\r\n\r\n                                    <button class=\"expandCollapseButton\" data-frameId=\"frame7\">+</button>\r\n                                    <div class=\"source\">\r\n                                            <ol start=\"13\" class=\"collapsible\">\r\n                                                    <li><span>            : base(configuration, logger)</span></li>\r\n                                                    <li><span>        {</span></li>\r\n                                                    <li><span>            // Enable logging at the adapter level using OnTurnError.</span></li>\r\n                                                    <li><span>            OnTurnError = async (turnContext, exception) =&gt;</span></li>\r\n                                                    <li><span>            {</span></li>\r\n                                                    <li><span>                logger.LogError($&quot;Exception caught : {exception}&quot;);</span></li>\r\n                                            </ol>\r\n\r\n                                        <ol start=\"19\" class=\"highlight\">\r\n                                                <li><span>                await turnContext.SendActivityAsync(&quot;Sorry, it looks like something went wrong.&quot;);</span></li>\r\n                                        </ol>\r\n\r\n                                            <ol start='20' class=\"collapsible\">\r\n                                                    <li><span>                await turnContext.SendActivityAsync(&quot;To run this sample make sure you have the QnA model deployed.&quot;);</span></li>\r\n                                                    <li><span>            };</span></li>\r\n                                                    <li><span>        }</span></li>\r\n                                                    <li><span>    }</span></li>\r\n                                                    <li><span>}</span></li>\r\n                                            </ol>\r\n                                    </div>\r\n                            </li>\r\n                            <li class=\"frame\" id=\"frame8\">\r\n                                    <h3>Microsoft.Bot.Builder.BotAdapter.RunPipelineAsync(ITurnContext turnContext, BotCallbackHandler callback, CancellationToken cancellationToken) in <code title=\"d:\\a\\1\\s\\libraries\\Microsoft.Bot.Builder\\BotAdapter.cs\">BotAdapter.cs</code></h3>\r\n\r\n                            </li>\r\n                            <li class=\"frame\" id=\"frame9\">\r\n                                    <h3>Microsoft.Bot.Builder.BotFrameworkAdapter.ProcessActivityAsync(ClaimsIdentity claimsIdentity, Activity activity, BotCallbackHandler callback, CancellationToken cancellationToken) in <code title=\"d:\\a\\1\\s\\libraries\\Microsoft.Bot.Builder\\BotFrameworkAdapter.cs\">BotFrameworkAdapter.cs</code></h3>\r\n\r\n                            </li>\r\n                            <li class=\"frame\" id=\"frame10\">\r\n                                    <h3>Microsoft.Bot.Builder.BotFrameworkAdapter.ProcessActivityAsync(string authHeader, Activity activity, BotCallbackHandler callback, CancellationToken cancellationToken) in <code title=\"d:\\a\\1\\s\\libraries\\Microsoft.Bot.Builder\\BotFrameworkAdapter.cs\">BotFrameworkAdapter.cs</code></h3>\r\n\r\n                            </li>\r\n                            <li class=\"frame\" id=\"frame11\">\r\n                                    <h3>Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter.ProcessAsync(HttpRequest httpRequest, HttpResponse httpResponse, IBot bot, CancellationToken cancellationToken) in <code title=\"d:\\a\\1\\s\\libraries\\integration\\Microsoft.Bot.Builder.Integration.AspNet.Core\\BotFrameworkHttpAdapter.cs\">BotFrameworkHttpAdapter.cs</code></h3>\r\n\r\n                            </li>\r\n                            <li class=\"frame\" id=\"frame12\">\r\n                                    <h3>Microsoft.BotBuilderSamples.BotController.PostAsync() in <code title=\"D:\\adminqnabot-bot-src\\Controllers\\BotController.cs\">BotController.cs</code></h3>\r\n\r\n                                    <button class=\"expandCollapseButton\" data-frameId=\"frame12\">+</button>\r\n                                    <div class=\"source\">\r\n                                            <ol start=\"26\" class=\"collapsible\">\r\n                                                    <li><span></span></li>\r\n                                                    <li><span>        [HttpPost]</span></li>\r\n                                                    <li><span>        public async Task PostAsync()</span></li>\r\n                                                    <li><span>        {</span></li>\r\n                                                    <li><span>            // Delegate the processing of the HTTP POST to the adapter.</span></li>\r\n                                                    <li><span>            // The adapter will invoke the bot.</span></li>\r\n                                            </ol>\r\n\r\n                                        <ol start=\"32\" class=\"highlight\">\r\n                                                <li><span>            await _adapter.ProcessAsync(Request, Response, _bot);</span></li>\r\n                                        </ol>\r\n\r\n                                            <ol start='33' class=\"collapsible\">\r\n                                                    <li><span>        }</span></li>\r\n                                                    <li><span>    }</span></li>\r\n                                                    <li><span>}</span></li>\r\n                                            </ol>\r\n                                    </div>\r\n                            </li>\r\n                            <li class=\"frame\" id=\"frame13\">\r\n                                    <h3>lambda_method(Closure , object )</h3>\r\n\r\n                            </li>\r\n                            <li class=\"frame\" id=\"frame14\">\r\n                                    <h3>Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable&#x2B;Awaiter.GetResult()</h3>\r\n\r\n                            </li>\r\n                            <li class=\"frame\" id=\"frame15\">\r\n                                    <h3>Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor&#x2B;AwaitableResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, object controller, object[] arguments)</h3>\r\n\r\n                            </li>\r\n                            <li class=\"frame\" id=\"frame16\">\r\n                                    <h3>System.Threading.Tasks.ValueTask&lt;TResult&gt;.get_Result()</h3>\r\n\r\n                            </li>\r\n                            <li class=\"frame\" id=\"frame17\">\r\n                                    <h3>Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()</h3>\r\n\r\n                            </li>\r\n                            <li class=\"frame\" id=\"frame18\">\r\n                                    <h3>Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()</h3>\r\n\r\n                            </li>\r\n                            <li class=\"frame\" id=\"frame19\">\r\n                                    <h3>Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)</h3>\r\n\r\n                            </li>\r\n                            <li class=\"frame\" id=\"frame20\">\r\n                                    <h3>Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)</h3>\r\n\r\n                            </li>\r\n                            <li class=\"frame\" id=\"frame21\">\r\n                                    <h3>Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()</h3>\r\n\r\n                            </li>\r\n                            <li class=\"frame\" id=\"frame22\">\r\n                                    <h3>Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()</h3>\r\n\r\n                            </li>\r\n                            <li class=\"frame\" id=\"frame23\">\r\n                                    <h3>Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)</h3>\r\n\r\n                            </li>\r\n                            <li class=\"frame\" id=\"frame24\">\r\n                                    <h3>Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)</h3>\r\n\r\n                            </li>\r\n                            <li class=\"frame\" id=\"frame25\">\r\n                                    <h3>Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()</h3>\r\n\r\n                            </li>\r\n                            <li class=\"frame\" id=\"frame26\">\r\n                                    <h3>Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()</h3>\r\n\r\n                            </li>\r\n                            <li class=\"frame\" id=\"frame27\">\r\n                                    <h3>Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)</h3>\r\n\r\n                            </li>\r\n                            <li class=\"frame\" id=\"frame28\">\r\n                                    <h3>Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)</h3>\r\n\r\n                            </li>\r\n                            <li class=\"frame\" id=\"frame29\">\r\n                                    <h3>Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)</h3>\r\n\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                    <li>\r\n                        <br/>\r\n                        <div class=\"rawExceptionBlock\">\r\n                            <div class=\"showRawExceptionContainer\">\r\n                                <button class=\"showRawException\" data-exceptionDetailId=\"exceptionDetail1\">Show raw exception details</button>\r\n                            </div>\r\n                            <div id=\"exceptionDetail1\" class=\"rawExceptionDetails\">\r\n                                <pre class=\"rawExceptionStackTrace\">Microsoft.Bot.Schema.ErrorResponseException: Operation returned an invalid status code &#x27;PaymentRequired&#x27;&#xD;&#xA;   at Microsoft.Bot.Connector.Conversations.ReplyToActivityWithHttpMessagesAsync(String conversationId, String activityId, Activity activity, Dictionary`2 customHeaders, CancellationToken cancellationToken) in d:\\a\\1\\s\\libraries\\Microsoft.Bot.Connector\\Conversations.cs:line 1121&#xD;&#xA;   at Microsoft.Bot.Connector.ConversationsExtensions.ReplyToActivityAsync(IConversations operations, String conversationId, String activityId, Activity activity, CancellationToken cancellationToken) in d:\\a\\1\\s\\libraries\\Microsoft.Bot.Connector\\ConversationsExtensions.cs:line 241&#xD;&#xA;   at Microsoft.Bot.Builder.BotFrameworkAdapter.SendActivitiesAsync(ITurnContext turnContext, Activity[] activities, CancellationToken cancellationToken) in d:\\a\\1\\s\\libraries\\Microsoft.Bot.Builder\\BotFrameworkAdapter.cs:line 500&#xD;&#xA;   at Microsoft.Bot.Builder.TurnContext.&lt;&gt;c__DisplayClass22_0.&lt;&lt;SendActivitiesAsync&gt;g__SendActivitiesThroughAdapter|1&gt;d.MoveNext() in d:\\a\\1\\s\\libraries\\Microsoft.Bot.Builder\\TurnContext.cs:line 267&#xD;&#xA;--- End of stack trace from previous location where exception was thrown ---&#xD;&#xA;   at Microsoft.Bot.Builder.TurnContext.SendActivityAsync(IActivity activity, CancellationToken cancellationToken) in d:\\a\\1\\s\\libraries\\Microsoft.Bot.Builder\\TurnContext.cs:line 196&#xD;&#xA;   at Microsoft.Bot.Builder.TurnContext.SendActivityAsync(String textReplyToSend, String speak, String inputHint, CancellationToken cancellationToken) in d:\\a\\1\\s\\libraries\\Microsoft.Bot.Builder\\TurnContext.cs:line 179&#xD;&#xA;   at Microsoft.BotBuilderSamples.AdapterWithErrorHandler.&lt;&gt;c__DisplayClass0_0.&lt;&lt;-ctor&gt;b__0&gt;d.MoveNext() in D:\\adminqnabot-bot-src\\AdapterWithErrorHandler.cs:line 19&#xD;&#xA;--- End of stack trace from previous location where exception was thrown ---&#xD;&#xA;   at Microsoft.Bot.Builder.BotAdapter.RunPipelineAsync(ITurnContext turnContext, BotCallbackHandler callback, CancellationToken cancellationToken) in d:\\a\\1\\s\\libraries\\Microsoft.Bot.Builder\\BotAdapter.cs:line 210&#xD;&#xA;   at Microsoft.Bot.Builder.BotFrameworkAdapter.ProcessActivityAsync(ClaimsIdentity claimsIdentity, Activity activity, BotCallbackHandler callback, CancellationToken cancellationToken) in d:\\a\\1\\s\\libraries\\Microsoft.Bot.Builder\\BotFrameworkAdapter.cs:line 394&#xD;&#xA;   at Microsoft.Bot.Builder.BotFrameworkAdapter.ProcessActivityAsync(String authHeader, Activity activity, BotCallbackHandler callback, CancellationToken cancellationToken) in d:\\a\\1\\s\\libraries\\Microsoft.Bot.Builder\\BotFrameworkAdapter.cs:line 364&#xD;&#xA;   at Microsoft.Bot.Builder.Integration.AspNet.Core.BotFrameworkHttpAdapter.ProcessAsync(HttpRequest httpRequest, HttpResponse httpResponse, IBot bot, CancellationToken cancellationToken) in d:\\a\\1\\s\\libraries\\integration\\Microsoft.Bot.Builder.Integration.AspNet.Core\\BotFrameworkHttpAdapter.cs:line 133&#xD;&#xA;   at Microsoft.BotBuilderSamples.BotController.PostAsync() in D:\\adminqnabot-bot-src\\Controllers\\BotController.cs:line 32&#xD;&#xA;   at lambda_method(Closure , Object )&#xD;&#xA;   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()&#xD;&#xA;   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.AwaitableResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)&#xD;&#xA;   at System.Threading.Tasks.ValueTask`1.get_Result()&#xD;&#xA;   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()&#xD;&#xA;   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()&#xD;&#xA;   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)&#xD;&#xA;   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State&amp; next, Scope&amp; scope, Object&amp; state, Boolean&amp; isCompleted)&#xD;&#xA;   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()&#xD;&#xA;   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()&#xD;&#xA;   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)&#xD;&#xA;   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State&amp; next, Scope&amp; scope, Object&amp; state, Boolean&amp; isCompleted)&#xD;&#xA;   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()&#xD;&#xA;   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()&#xD;&#xA;   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)&#xD;&#xA;   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)&#xD;&#xA;   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)</pre>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n            </ul>\r\n        </div>\r\n\r\n        <div id=\"querypage\" class=\"page\">\r\n                <p>No QueryString data.</p>\r\n        </div>\r\n\r\n        <div id=\"cookiespage\" class=\"page\">\r\n                <p>No cookie data.</p>\r\n        </div>\r\n        <div id=\"headerspage\" class=\"page\">\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Variable</th>\r\n                            <th>Value</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                                <tr>\r\n                                    <td>Accept</td>\r\n                                    <td>*/*</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Accept-Encoding</td>\r\n                                    <td>gzip,deflate</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Authorization</td>\r\n                                    <td>Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6IkhsQzBSMTJza3hOWjFXUXdtak9GXzZ0X3RERSJ9.eyJhdWQiOiJhZGM4YTBjNi1jYWQ0LTRmZTktYTdkZi1iODM5ODE1OGVkZTgiLCJpc3MiOiJodHRwczovL2xvZ2luLm1pY3Jvc29mdG9ubGluZS5jb20vZDZkNDk0MjAtZjM5Yi00ZGY3LWExZGMtZDU5YTkzNTg3MWRiL3YyLjAiLCJpYXQiOjE1ODA0NjIzOTIsIm5iZiI6MTU4MDQ2MjM5MiwiZXhwIjoxNTgwNDY2MjkyLCJhaW8iOiI0Mk5nWU1oZHBCZXdhN1dqOFdrdTRaWEJlMk1mQXdBPSIsImF6cCI6ImFkYzhhMGM2LWNhZDQtNGZlOS1hN2RmLWI4Mzk4MTU4ZWRlOCIsImF6cGFjciI6IjEiLCJ0aWQiOiJkNmQ0OTQyMC1mMzliLTRkZjctYTFkYy1kNTlhOTM1ODcxZGIiLCJ1dGkiOiI4MTZTNXNBQ2lrbXJHdXZKeGJkQ0FBIiwidmVyIjoiMi4wIn0.ZQp9tjT_3rkOu0r4hOMybYDdJ9LUvOlgE4icApBRT8Kw5xb6HPrW9u6zIIYE-6xhJsOdCQ2_OtGkXrlcuKM7d6PoLR6-1YtURNmQpUA6Rmv36hUYA4-OizGl8Ed8wAGyS-09sOnnM9BgaPL5MzBgO9Z1UgWftBVSriS18OsqJuBUV7K8wymsibnLieZPjZH5CoJ5Ub-Qor8h9B0eLT--8bOoPMJLsoI58grUoNYpXXHp2tsV3cUlRVc4hq2fw3YUuv1ufRi5j9XSpg17bw1DqnwL1K3Ykp8tzg3u1PeGIAFtsVe5DM7yTsUgA0dPgtJCp5Pns7MaM2QxIvw5h7EMlQ</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Connection</td>\r\n                                    <td>Keep-Alive</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Content-Length</td>\r\n                                    <td>713</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Content-Type</td>\r\n                                    <td>application/json</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Host</td>\r\n                                    <td>localhost:3978</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>MS-ASPNETCORE-TOKEN</td>\r\n                                    <td>2e6466aa-dd9c-4c8b-9935-5fdf3886c2ec</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>User-Agent</td>\r\n                                    <td>node-fetch/1.0 (&#x2B;https://github.com/bitinn/node-fetch)</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>X-Original-For</td>\r\n                                    <td>127.0.0.1:55677</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>X-Original-Proto</td>\r\n                                    <td>http</td>\r\n                                </tr>\r\n                    </tbody>\r\n                </table>\r\n        </div>\r\n        <script>\r\n            //<!--\r\n            (function (window, undefined) {\r\n    \"use strict\";\r\n\r\n    function ns(selector, element) {\r\n        return new NodeCollection(selector, element);\r\n    }\r\n\r\n    function NodeCollection(selector, element) {\r\n        this.items = [];\r\n        element = element || window.document;\r\n\r\n        var nodeList;\r\n\r\n        if (typeof (selector) === \"string\") {\r\n            nodeList = element.querySelectorAll(selector);\r\n            for (var i = 0, l = nodeList.length; i < l; i++) {\r\n                this.items.push(nodeList.item(i));\r\n            }\r\n        }\r\n    }\r\n\r\n    NodeCollection.prototype = {\r\n        each: function (callback) {\r\n            for (var i = 0, l = this.items.length; i < l; i++) {\r\n                callback(this.items[i], i);\r\n            }\r\n            return this;\r\n        },\r\n\r\n        children: function (selector) {\r\n            var children = [];\r\n\r\n            this.each(function (el) {\r\n                children = children.concat(ns(selector, el).items);\r\n            });\r\n\r\n            return ns(children);\r\n        },\r\n\r\n        hide: function () {\r\n            this.each(function (el) {\r\n                el.style.display = \"none\";\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        toggle: function () {\r\n            this.each(function (el) {\r\n                el.style.display = el.style.display === \"none\" ? \"\" : \"none\";\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        show: function () {\r\n            this.each(function (el) {\r\n                el.style.display = \"\";\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        addClass: function (className) {\r\n            this.each(function (el) {\r\n                var existingClassName = el.className,\r\n                    classNames;\r\n                if (!existingClassName) {\r\n                    el.className = className;\r\n                } else {\r\n                    classNames = existingClassName.split(\" \");\r\n                    if (classNames.indexOf(className) < 0) {\r\n                        el.className = existingClassName + \" \" + className;\r\n                    }\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        removeClass: function (className) {\r\n            this.each(function (el) {\r\n                var existingClassName = el.className,\r\n                    classNames, index;\r\n                if (existingClassName === className) {\r\n                    el.className = \"\";\r\n                } else if (existingClassName) {\r\n                    classNames = existingClassName.split(\" \");\r\n                    index = classNames.indexOf(className);\r\n                    if (index > 0) {\r\n                        classNames.splice(index, 1);\r\n                        el.className = classNames.join(\" \");\r\n                    }\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        attr: function (name) {\r\n            if (this.items.length === 0) {\r\n                return null;\r\n            }\r\n\r\n            return this.items[0].getAttribute(name);\r\n        },\r\n\r\n        on: function (eventName, handler) {\r\n            this.each(function (el, idx) {\r\n                var callback = function (e) {\r\n                    e = e || window.event;\r\n                    if (!e.which && e.keyCode) {\r\n                        e.which = e.keyCode; // Normalize IE8 key events\r\n                    }\r\n                    handler.apply(el, [e]);\r\n                };\r\n\r\n                if (el.addEventListener) { // DOM Events\r\n                    el.addEventListener(eventName, callback, false);\r\n                } else if (el.attachEvent) { // IE8 events\r\n                    el.attachEvent(\"on\" + eventName, callback);\r\n                } else {\r\n                    el[\"on\" + type] = callback;\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        click: function (handler) {\r\n            return this.on(\"click\", handler);\r\n        },\r\n\r\n        keypress: function (handler) {\r\n            return this.on(\"keypress\", handler);\r\n        }\r\n    };\r\n\r\n    function frame(el) {\r\n        ns(\".source .collapsible\", el).toggle();\r\n    }\r\n\r\n    function expandCollapseButton(el) {\r\n        var frameId = el.getAttribute(\"data-frameId\");\r\n        frame(document.getElementById(frameId));\r\n        if (el.innerText === \"+\") {\r\n            el.innerText = \"-\";\r\n        }\r\n        else {\r\n            el.innerText = \"+\";\r\n        }\r\n    }\r\n\r\n    function tab(el) {\r\n        var unselected = ns(\"#header .selected\").removeClass(\"selected\").attr(\"id\");\r\n        var selected = ns(\"#\" + el.id).addClass(\"selected\").attr(\"id\");\r\n\r\n        ns(\"#\" + unselected + \"page\").hide();\r\n        ns(\"#\" + selected + \"page\").show();\r\n    }\r\n\r\n    ns(\".rawExceptionDetails\").hide();\r\n    ns(\".collapsible\").hide();\r\n    ns(\".page\").hide();\r\n    ns(\"#stackpage\").show();\r\n\r\n    ns(\".expandCollapseButton\")\r\n        .click(function () {\r\n            expandCollapseButton(this);\r\n        })\r\n        .keypress(function (e) {\r\n            if (e.which === 13) {\r\n                expandCollapseButton(this);\r\n            }\r\n        });\r\n\r\n    ns(\"#header li\")\r\n        .click(function () {\r\n            tab(this);\r\n        })\r\n        .keypress(function (e) {\r\n            if (e.which === 13) {\r\n                tab(this);\r\n            }\r\n        });\r\n\r\n    ns(\".showRawException\")\r\n        .click(function () {\r\n            var exceptionDetailId = this.getAttribute(\"data-exceptionDetailId\");\r\n            ns(\"#\" + exceptionDetailId).toggle();\r\n        });\r\n})(window);\r\n            //-->\r\n        </script>\r\n    </body>\r\n</html>\r\n"
}